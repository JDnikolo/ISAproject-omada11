[
    {
        "id": "3a27befe6d14864d",
        "type": "tab",
        "label": "Insert raw data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8efdc04156fb7903",
        "type": "tab",
        "label": "TH parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "17ce1edd4d54f222",
        "type": "tab",
        "label": "HVAC Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b6ef3fbc7846079",
        "type": "tab",
        "label": "MiAC Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2108fc68644b39eb",
        "type": "tab",
        "label": "Water Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "54a141b54b687123",
        "type": "tab",
        "label": "Movement Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db79e7d3fca21e88",
        "type": "tab",
        "label": "Etot parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2279f0ac8324c7e2",
        "type": "tab",
        "label": "Wtot parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fe78548ad9d34539",
        "type": "mqtt-broker",
        "name": "mqtt",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "28bf60a032e41c72",
        "type": "MySQLdatabase",
        "name": "iot_home",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "iot_home",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "6945d8be0cda55ac",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "hvac readings",
        "topic": "/home/15min/hvac",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "bb5a4d5d3879eaba",
                "07d1f1ab43e4fbfc"
            ]
        ]
    },
    {
        "id": "117d834ac67e9dbb",
        "type": "mysql",
        "z": "3a27befe6d14864d",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "cdc2caef56de0f03"
            ]
        ]
    },
    {
        "id": "07d1f1ab43e4fbfc",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO HVAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "cdc2caef56de0f03",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 480,
        "wires": []
    },
    {
        "id": "bb5a4d5d3879eaba",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 40,
        "wires": []
    },
    {
        "id": "a92096229880249b",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "th readings",
        "topic": "/home/15min/th",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "ecb2987f55a38530",
                "5f7d7504ff6d6262"
            ]
        ]
    },
    {
        "id": "5f7d7504ff6d6262",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO TH(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "ecb2987f55a38530",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 180,
        "wires": []
    },
    {
        "id": "2d0fdac6ba135fca",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "miac readings",
        "topic": "/home/15min/miac",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "fdb16459e831f85d",
                "88be4ea8d9fd6cc0"
            ]
        ]
    },
    {
        "id": "88be4ea8d9fd6cc0",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\ncontext.set('last_miac', data.reading);\nmsg.topic = \"INSERT INTO MIAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 380,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "fdb16459e831f85d",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 320,
        "wires": []
    },
    {
        "id": "d102bcf59d790c38",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "etot readings",
        "topic": "/home/day/etot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 520,
        "wires": [
            [
                "07424ef8d151054b",
                "5e054e3ae67c97bb"
            ]
        ]
    },
    {
        "id": "5e054e3ae67c97bb",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO Etot(dtime, reading) VALUES (?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "07424ef8d151054b",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "a643afce827a5534",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "move readings",
        "topic": "/home/sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 640,
        "wires": [
            [
                "39f6741168e8ef7b",
                "7255652051994995",
                "5910bc943a1b9ad3"
            ]
        ]
    },
    {
        "id": "7255652051994995",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device];\nmsg.topic = \"INSERT INTO Movement(dtime, device) VALUES (?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 640,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "39f6741168e8ef7b",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "d342b054fab01191",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "water readings",
        "topic": "/home/15min/water",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 760,
        "wires": [
            [
                "0845392d752ec892",
                "644ba14cdb245581"
            ]
        ]
    },
    {
        "id": "644ba14cdb245581",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nvar today = new Date();\nvar readingDate = new Date(data.dtime);\nvar dayDiff = Math.floor((today.getTime() - readingDate.getTime()) / 86400000)\nif (dayDiff == 0) {\n    msg.payload = [data.dtime, data.device, data.reading];\n    msg.topic = \"INSERT INTO Water(dtime, device, reading) VALUES (?, ?);\";\n}\nelse if (dayDiff == 10) {\n    msg.payload = [data.dtime_event, data.dtime_received, data.device, data.reading];\n    msg.topic = \"INSERT INTO RejectedEvents(dtime_event, dtime_received, device, reading) VALUES (?, ?);\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 760,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "0845392d752ec892",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 700,
        "wires": []
    },
    {
        "id": "6d832a69ba97fd83",
        "type": "mqtt in",
        "z": "3a27befe6d14864d",
        "name": "watertot readings",
        "topic": "/home/day/watertot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 900,
        "wires": [
            [
                "4e745ee2ea3b8dc1",
                "63df871e7d1018e0"
            ]
        ]
    },
    {
        "id": "63df871e7d1018e0",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO watertot(device, reading) VALUES (?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 900,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "4e745ee2ea3b8dc1",
        "type": "debug",
        "z": "3a27befe6d14864d",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 840,
        "wires": []
    },
    {
        "id": "5910bc943a1b9ad3",
        "type": "function",
        "z": "3a27befe6d14864d",
        "name": "trigger_alarm",
        "func": "function is_night_time(dtime) {\n    const date = new Date(dtime);\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n    return (hour >= 2 && (hour <=5 || (hour == 6 && minutes == 0)));\n}\n\nif (context.get('last_miac') < 100) {\n    msg.payload.trigger = 'energy';\n}\nelse if (is_night_time()) {\n    msg.payload.trigger = 'time';\n}\nelse {\n    return null\n}\n\nconst data = msg.payload;\nmsg.payload = [data.dtime, data.trigger];\nmsg.topic = \"INSERT INTO Alarms(dtime, trigger) VALUES (?, ?);\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "117d834ac67e9dbb"
            ]
        ]
    },
    {
        "id": "23f91444edef3463",
        "type": "mqtt in",
        "z": "8efdc04156fb7903",
        "name": "TH*",
        "topic": "/home/15min/TH/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 70,
        "y": 220,
        "wires": [
            [
                "754c96ec869615ea"
            ]
        ]
    },
    {
        "id": "41d3c48c688ca09f",
        "type": "debug",
        "z": "8efdc04156fb7903",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "754c96ec869615ea",
        "type": "function",
        "z": "8efdc04156fb7903",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "41d3c48c688ca09f",
                "d16e6fc3e29dc9ed"
            ]
        ]
    },
    {
        "id": "e1ba02a1460b50fd",
        "type": "function",
        "z": "8efdc04156fb7903",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO TH(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "2e063b50f0644d7d"
            ]
        ]
    },
    {
        "id": "2e063b50f0644d7d",
        "type": "mysql",
        "z": "8efdc04156fb7903",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 850,
        "y": 120,
        "wires": [
            [
                "6e1de33e561bc717"
            ]
        ]
    },
    {
        "id": "6e1de33e561bc717",
        "type": "debug",
        "z": "8efdc04156fb7903",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 60,
        "wires": []
    },
    {
        "id": "d16e6fc3e29dc9ed",
        "type": "switch",
        "z": "8efdc04156fb7903",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "e1ba02a1460b50fd",
                "021026d9c929bd57"
            ],
            [
                "878e6b7f3f63ebfc"
            ],
            [
                "2e09e28c64e887e0"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "878e6b7f3f63ebfc",
        "type": "debug",
        "z": "8efdc04156fb7903",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 540,
        "wires": []
    },
    {
        "id": "2e09e28c64e887e0",
        "type": "debug",
        "z": "8efdc04156fb7903",
        "name": "too late",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "021026d9c929bd57",
        "type": "function",
        "z": "8efdc04156fb7903",
        "name": "aggregation",
        "func": "const data = msg.payload;\n\nif (!context.th) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.th = {\n        \"dtime\": date,\n        \"freq\": 0.0,\n        \"sum\": 0.0  \n    };\n}\n\nif (context.th.dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.th.dtime, context.th.sum/context.th.freq];\n    msg.topic = \"INSERT INTO THAvgDay(dtime, day_avg) VALUES(?, ?);\";\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.th.dtime = date;\n    context.th.freq = 1.0;\n    context.th.sum = data.reading;\n    return msg;\n}\n\ncontext.th.freq += 1.0;\ncontext.th.sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 320,
        "wires": [
            [
                "2e063b50f0644d7d"
            ]
        ]
    },
    {
        "id": "cc057af8082807c8",
        "type": "mqtt in",
        "z": "17ce1edd4d54f222",
        "name": "HVAC*",
        "topic": "/home/15min/HVAC/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 240,
        "wires": [
            [
                "7513f63e2be84093"
            ]
        ]
    },
    {
        "id": "1799d813bb9d0388",
        "type": "debug",
        "z": "17ce1edd4d54f222",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 140,
        "wires": []
    },
    {
        "id": "7513f63e2be84093",
        "type": "function",
        "z": "17ce1edd4d54f222",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseInt(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 240,
        "wires": [
            [
                "1799d813bb9d0388",
                "c8112392122d40e7"
            ]
        ]
    },
    {
        "id": "6db38e4fdeacc640",
        "type": "function",
        "z": "17ce1edd4d54f222",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO HVAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "e5dc51ef21296b47"
            ]
        ]
    },
    {
        "id": "e5dc51ef21296b47",
        "type": "mysql",
        "z": "17ce1edd4d54f222",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "14d51e6a2a48ad2b"
            ]
        ]
    },
    {
        "id": "14d51e6a2a48ad2b",
        "type": "debug",
        "z": "17ce1edd4d54f222",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "c8112392122d40e7",
        "type": "switch",
        "z": "17ce1edd4d54f222",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "6db38e4fdeacc640",
                "aac1d519970aee3e"
            ],
            [
                "d1734cbde395faf9"
            ],
            [
                "3127de8e0eec35dd"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "d1734cbde395faf9",
        "type": "debug",
        "z": "17ce1edd4d54f222",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 560,
        "wires": []
    },
    {
        "id": "3127de8e0eec35dd",
        "type": "debug",
        "z": "17ce1edd4d54f222",
        "name": "too late",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 620,
        "wires": []
    },
    {
        "id": "aac1d519970aee3e",
        "type": "function",
        "z": "17ce1edd4d54f222",
        "name": "aggregation",
        "func": "const data = msg.payload;\n\nif (!context.hvac) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.hvac = {\n        \"dtime\": date,\n        \"sum\": 0\n    };\n}\n\nif (context.hvac.dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.hvac.dtime, context.hvac.sum];\n    msg.topic = \"INSERT INTO HVACSumDay(dtime, day_sum) VALUES(?, ?);\";\n    global.set(\"last_hvac_sum\", context.hvac.sum)\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.hvac.dtime = date;\n    context.hvac.sum = data.reading;\n    return msg;\n}\n\ncontext.hvac.sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "e5dc51ef21296b47"
            ]
        ]
    },
    {
        "id": "117b4a92f2fa0c0f",
        "type": "mqtt in",
        "z": "2b6ef3fbc7846079",
        "name": "MiAC*",
        "topic": "/home/15min/MiAC/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 280,
        "wires": [
            [
                "35229292b7f81e13"
            ]
        ]
    },
    {
        "id": "b8550b8be4e93850",
        "type": "debug",
        "z": "2b6ef3fbc7846079",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "35229292b7f81e13",
        "type": "function",
        "z": "2b6ef3fbc7846079",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseInt(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 280,
        "wires": [
            [
                "b8550b8be4e93850",
                "0f31da8ee50d6380"
            ]
        ]
    },
    {
        "id": "e7f4144755486f7c",
        "type": "function",
        "z": "2b6ef3fbc7846079",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\ncontext.set('last_miac', data.reading);\nmsg.topic = \"INSERT INTO MiAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "994ce9d755b19649"
            ]
        ]
    },
    {
        "id": "994ce9d755b19649",
        "type": "mysql",
        "z": "2b6ef3fbc7846079",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "c71b32ed0d4b9327"
            ]
        ]
    },
    {
        "id": "c71b32ed0d4b9327",
        "type": "debug",
        "z": "2b6ef3fbc7846079",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "0f31da8ee50d6380",
        "type": "switch",
        "z": "2b6ef3fbc7846079",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "e7f4144755486f7c",
                "6e279b895a4962f2"
            ],
            [
                "d58fbf3bad3efd2c"
            ],
            [
                "e4e7ce6052b1fbef"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "d58fbf3bad3efd2c",
        "type": "debug",
        "z": "2b6ef3fbc7846079",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 600,
        "wires": []
    },
    {
        "id": "e4e7ce6052b1fbef",
        "type": "debug",
        "z": "2b6ef3fbc7846079",
        "name": "too late",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 660,
        "wires": []
    },
    {
        "id": "6e279b895a4962f2",
        "type": "function",
        "z": "2b6ef3fbc7846079",
        "name": "aggregation",
        "func": "const data = msg.payload;\n\nif (!context.miac) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.miac = {\n        \"dtime\": date,\n        \"sum\": 0\n    };\n}\n\nif (context.miac.dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.miac.dtime, context.miac.sum];\n    msg.topic = \"INSERT INTO MIACSumDay(dtime, day_sum) VALUES(?, ?);\";\n    global.set(\"last_miac_sum\", context.miac.sum)\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.miac.dtime = date;\n    context.miac.sum = data.reading;\n    return msg;\n}\n\ncontext.miac.sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "994ce9d755b19649"
            ]
        ]
    },
    {
        "id": "fef2eb77b00ec407",
        "type": "mqtt in",
        "z": "2108fc68644b39eb",
        "name": "Water*",
        "topic": "/home/15min/W/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "45bdcfeb2866909a"
            ]
        ]
    },
    {
        "id": "78f37cef7421b9c3",
        "type": "debug",
        "z": "2108fc68644b39eb",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "45bdcfeb2866909a",
        "type": "function",
        "z": "2108fc68644b39eb",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "78f37cef7421b9c3",
                "9d2a107a21898411"
            ]
        ]
    },
    {
        "id": "7fe96812a1e882ec",
        "type": "function",
        "z": "2108fc68644b39eb",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO Water(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 160,
        "wires": [
            [
                "19be005aa505d936"
            ]
        ]
    },
    {
        "id": "19be005aa505d936",
        "type": "mysql",
        "z": "2108fc68644b39eb",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "69923c0315c8e5a9"
            ]
        ]
    },
    {
        "id": "69923c0315c8e5a9",
        "type": "debug",
        "z": "2108fc68644b39eb",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 80,
        "wires": []
    },
    {
        "id": "9d2a107a21898411",
        "type": "switch",
        "z": "2108fc68644b39eb",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "7fe96812a1e882ec",
                "1fca8e69a67c4ff5"
            ],
            [
                "bcd63e241d98ebae"
            ],
            [
                "df51b67505e6ee68"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "1fca8e69a67c4ff5",
        "type": "function",
        "z": "2108fc68644b39eb",
        "name": "aggregation",
        "func": "const data = msg.payload;\n\nif (!context.water) {\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.water = {\n        \"dtime\": date,\n        \"sum\": 0.0\n    };\n}\n\nif (context.water.dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.water.dtime, context.water.sum];\n    msg.topic = \"INSERT INTO WaterSumDay(dtime, day_sum) VALUES(?, ?);\";\n    global.set(\"last_w_sum\", context.water.sum)\n    context.yesterdayWater = {...context.water};\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.water.dtime = date;\n    context.water.sum = data.reading;\n    return msg;\n}\n\ncontext.water.sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 380,
        "wires": [
            [
                "19be005aa505d936"
            ]
        ]
    },
    {
        "id": "bcd63e241d98ebae",
        "type": "function",
        "z": "2108fc68644b39eb",
        "name": "late aggregation",
        "func": "const data = msg.payload;\n\nif (!context.yesterdayWater) {\n    const date = data.startOfYesterday;\n    context.yesterdayWater = {\n        \"dtime\": date,\n        \"sum\": 0.0\n    };\n}\n\ncontext.yesterdayWater.sum += data.reading;\nmsg.payload = {};\nmsg.payload.dtime = data.dtime;\nmsg.payload.device = data.device;\nmsg.payload.reading = data.reading;\nmsg.payload.sum_dtime = context.yesterdayWater.dtime;\nmsg.payload.sum = context.yesterdayWater.sum;\nmsg.topic = \"INSERT INTO Water(dtime, device, reading) VALUES ( :dtime, :device, :reading); \" +\n\"INSERT INTO WaterSumDay(dtime, day_sum) VALUES(:sum_dtime, :sum) ON DUPLICATE KEY UPDATE day_sum = :sum ;\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 540,
        "wires": [
            [
                "19be005aa505d936"
            ]
        ]
    },
    {
        "id": "df51b67505e6ee68",
        "type": "function",
        "z": "2108fc68644b39eb",
        "name": "insert rejected",
        "func": "const data = msg.payload;\n\nmsg.payload = [data.dtime, data.startOfDay, data.device, data.reading];\nmsg.topic = \"INSERT INTO RejectedEvents(dtime_event, dtime_received, device, reading) VALUES (?, ?, ?, ?)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 762,
        "y": 629,
        "wires": [
            [
                "19be005aa505d936"
            ]
        ]
    },
    {
        "id": "81bc7faf3262997e",
        "type": "mqtt in",
        "z": "54a141b54b687123",
        "name": "Movement*",
        "topic": "/home/movement/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "b4e49444964521a4"
            ]
        ]
    },
    {
        "id": "c393e1f182fdc252",
        "type": "debug",
        "z": "54a141b54b687123",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "b4e49444964521a4",
        "type": "function",
        "z": "54a141b54b687123",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst device = msg.topic.split(\"/\")[3];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "c393e1f182fdc252",
                "df8cc4ea7747e7e9"
            ]
        ]
    },
    {
        "id": "779302da69427e73",
        "type": "function",
        "z": "54a141b54b687123",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device];\nmsg.topic = \"INSERT INTO Movement(dtime, device) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 160,
        "wires": [
            [
                "d725eac96ddda3b4"
            ]
        ]
    },
    {
        "id": "d725eac96ddda3b4",
        "type": "mysql",
        "z": "54a141b54b687123",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "97533937ab87a3e5"
            ]
        ]
    },
    {
        "id": "97533937ab87a3e5",
        "type": "debug",
        "z": "54a141b54b687123",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 80,
        "wires": []
    },
    {
        "id": "df8cc4ea7747e7e9",
        "type": "switch",
        "z": "54a141b54b687123",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 440,
        "wires": [
            [
                "779302da69427e73",
                "1d07da5de3624763",
                "072ed7a574069170"
            ],
            [
                "e13601e9348ae90d"
            ],
            [
                "f91c22110d315750"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "e13601e9348ae90d",
        "type": "debug",
        "z": "54a141b54b687123",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "f91c22110d315750",
        "type": "debug",
        "z": "54a141b54b687123",
        "name": "too late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 620,
        "wires": []
    },
    {
        "id": "1d07da5de3624763",
        "type": "function",
        "z": "54a141b54b687123",
        "name": "trigger_alarm",
        "func": "function is_night_time(dtime) {\n    const date = new Date(dtime);\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n    return (hour >= 2 && (hour <=5 || (hour == 6 && minutes == 0)));\n}\n\nif (context.get('last_miac') < 100) {\n    msg.payload.trigger = 'energy';\n}\nelse if (is_night_time()) {\n    msg.payload.trigger = 'time';\n}\nelse {\n    return null\n}\n\nconst data = msg.payload;\nmsg.payload = [data.dtime, data.trigger];\nmsg.topic = \"INSERT INTO Alarms(dtime, trigger) VALUES (?, ?);\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 260,
        "wires": [
            [
                "d725eac96ddda3b4"
            ]
        ]
    },
    {
        "id": "072ed7a574069170",
        "type": "function",
        "z": "54a141b54b687123",
        "name": "aggregation",
        "func": "const data = msg.payload;\n\nif (!context.mv) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.mv = {\n        \"dtime\": date,\n        \"sum\": 0\n    };\n}\n\nif (context.mv.dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.mv.dtime, context.mv.sum];\n    msg.topic = \"INSERT INTO MovementSumDay(dtime, day_count) VALUES(?, ?);\";\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.mv.dtime = date;\n    context.mv.sum = 0;\n    return msg;\n}\n\ncontext.mv.sum ++;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 380,
        "wires": [
            [
                "d725eac96ddda3b4"
            ]
        ]
    },
    {
        "id": "fbeb04143e237fbf",
        "type": "mqtt in",
        "z": "db79e7d3fca21e88",
        "name": "Etot",
        "topic": "/home/day/Etot",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 240,
        "wires": [
            [
                "fa646ec8be57e2cc"
            ]
        ]
    },
    {
        "id": "096b7e0b24b01c06",
        "type": "debug",
        "z": "db79e7d3fca21e88",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "fa646ec8be57e2cc",
        "type": "function",
        "z": "db79e7d3fca21e88",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "096b7e0b24b01c06",
                "036cedd5b6bbfe04"
            ]
        ]
    },
    {
        "id": "08a1a68bd98c6437",
        "type": "function",
        "z": "db79e7d3fca21e88",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO Etot(dtime, reading) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 120,
        "wires": [
            [
                "a845165e0fe4ce6c"
            ]
        ]
    },
    {
        "id": "a845165e0fe4ce6c",
        "type": "mysql",
        "z": "db79e7d3fca21e88",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 1530,
        "y": 200,
        "wires": [
            [
                "7334317bf3d33ff7"
            ]
        ]
    },
    {
        "id": "7334317bf3d33ff7",
        "type": "debug",
        "z": "db79e7d3fca21e88",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 140,
        "wires": []
    },
    {
        "id": "036cedd5b6bbfe04",
        "type": "switch",
        "z": "db79e7d3fca21e88",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "08a1a68bd98c6437",
                "973f3921fcbdd219",
                "399c805641804a1d"
            ],
            [
                "83fe9c4d4462ae37"
            ],
            [
                "7c9e15ecc356d9c9"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "83fe9c4d4462ae37",
        "type": "debug",
        "z": "db79e7d3fca21e88",
        "name": "late agg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 560,
        "wires": []
    },
    {
        "id": "7c9e15ecc356d9c9",
        "type": "debug",
        "z": "db79e7d3fca21e88",
        "name": "too late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 620,
        "wires": []
    },
    {
        "id": "973f3921fcbdd219",
        "type": "debug",
        "z": "db79e7d3fca21e88",
        "name": "todo: aggregate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 320,
        "wires": []
    },
    {
        "id": "399c805641804a1d",
        "type": "function",
        "z": "db79e7d3fca21e88",
        "name": "calculate day diff",
        "func": "if (!flow.get(\"previousEtot\")){\n    flow.set(\"previousEtot\", msg.payload.reading);\n    msg.payload.day_diff = 0;\n}else{\n    var diff = msg.payload.reading - flow.get(\"previousEtot\");\n    if (diff<0) diff=0;\n    msg.payload.day_diff = diff;\n    flow.set(\"previousEtot\", msg.payload.reading);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 420,
        "wires": [
            [
                "661226392c2fabf8",
                "e56d24025c35b398"
            ]
        ]
    },
    {
        "id": "661226392c2fabf8",
        "type": "function",
        "z": "db79e7d3fca21e88",
        "name": "insert daydiff data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.day_diff];\nmsg.topic = \"INSERT INTO EtotDayDiff(dtime, day_diff) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "a845165e0fe4ce6c"
            ]
        ]
    },
    {
        "id": "e721c5ef8965cb46",
        "type": "function",
        "z": "db79e7d3fca21e88",
        "name": "calculate ElecDayRest",
        "func": "const data = msg.payload;\nvar day_diff = msg.payload.day_diff;\nconst rest = day_diff-global.get(\"last_hvac_sum\")-global.get(\"last_miac_sum\");\nmsg.payload = [data.dtime, rest];\nmsg.topic = \"INSERT INTO ElecDayRest(dtime, leak_amount) VALUES ( ?, ?);\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 520,
        "wires": [
            [
                "a845165e0fe4ce6c"
            ]
        ]
    },
    {
        "id": "e56d24025c35b398",
        "type": "delay",
        "z": "db79e7d3fca21e88",
        "name": "wait for other aggregates",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 970,
        "y": 500,
        "wires": [
            [
                "e721c5ef8965cb46"
            ]
        ]
    },
    {
        "id": "683bebca6f481aa2",
        "type": "mqtt in",
        "z": "2279f0ac8324c7e2",
        "name": "Wtot",
        "topic": "/home/day/Wtot",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "e8418842320ffbd8"
            ]
        ]
    },
    {
        "id": "b0e0882d618a1547",
        "type": "debug",
        "z": "2279f0ac8324c7e2",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 200,
        "wires": []
    },
    {
        "id": "e8418842320ffbd8",
        "type": "function",
        "z": "2279f0ac8324c7e2",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 300,
        "wires": [
            [
                "b0e0882d618a1547",
                "e236745429a97ed5"
            ]
        ]
    },
    {
        "id": "df38b20d4086eae9",
        "type": "function",
        "z": "2279f0ac8324c7e2",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO Wtot(dtime, reading) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "d80e3b33b8da2f7a"
            ]
        ]
    },
    {
        "id": "d80e3b33b8da2f7a",
        "type": "mysql",
        "z": "2279f0ac8324c7e2",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 1630,
        "y": 400,
        "wires": [
            [
                "0ec537fb4171581e"
            ]
        ]
    },
    {
        "id": "e236745429a97ed5",
        "type": "switch",
        "z": "2279f0ac8324c7e2",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 560,
        "wires": [
            [
                "df38b20d4086eae9",
                "5343ec8113ba3683"
            ],
            [
                "502f83068e894bdc"
            ],
            [
                "217daddcbf28bbe4"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "502f83068e894bdc",
        "type": "debug",
        "z": "2279f0ac8324c7e2",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 740,
        "wires": []
    },
    {
        "id": "217daddcbf28bbe4",
        "type": "debug",
        "z": "2279f0ac8324c7e2",
        "name": "too late",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 800,
        "wires": []
    },
    {
        "id": "5343ec8113ba3683",
        "type": "function",
        "z": "2279f0ac8324c7e2",
        "name": "calculate day diff",
        "func": "if (!flow.get(\"previousWtot\")){\n    flow.set(\"previousWtot\", msg.payload.reading);\n    msg.payload.day_diff = 0;\n}else{\n    var diff=msg.payload.reading-flow.get(\"previousWtot\");\n    if (diff < 0) diff = 0;\n    msg.payload.day_diff = diff;\n    flow.set(\"previousWtot\", msg.payload.reading);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 480,
        "wires": [
            [
                "ec19357f9fe2f0b8",
                "b38c957417dc08ca"
            ]
        ]
    },
    {
        "id": "ec19357f9fe2f0b8",
        "type": "function",
        "z": "2279f0ac8324c7e2",
        "name": "insert daydiff data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.day_diff];\nmsg.topic = \"INSERT INTO WtotDayDiff(dtime, day_diff) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 400,
        "wires": [
            [
                "d80e3b33b8da2f7a",
                "b6f85a404f97ab67"
            ]
        ]
    },
    {
        "id": "b38c957417dc08ca",
        "type": "delay",
        "z": "2279f0ac8324c7e2",
        "name": "wait for other aggregates",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 620,
        "wires": [
            [
                "1831d1b67a082b13"
            ]
        ]
    },
    {
        "id": "1831d1b67a082b13",
        "type": "function",
        "z": "2279f0ac8324c7e2",
        "name": "calculate WaterDayRest",
        "func": "const data = msg.payload;\nvar day_diff = msg.payload.day_diff;\nconst rest = day_diff - global.get(\"last_w_sum\");\nmsg.payload = [data.dtime, rest];\nmsg.topic = \"INSERT INTO WaterDayRest(dtime, leak_amount) VALUES ( ?, ?);\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 620,
        "wires": [
            [
                "d80e3b33b8da2f7a",
                "b6f85a404f97ab67"
            ]
        ]
    },
    {
        "id": "0ec537fb4171581e",
        "type": "debug",
        "z": "2279f0ac8324c7e2",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 260,
        "wires": []
    },
    {
        "id": "b6f85a404f97ab67",
        "type": "debug",
        "z": "2279f0ac8324c7e2",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 520,
        "wires": []
    }
]