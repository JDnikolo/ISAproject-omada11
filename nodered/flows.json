[
    {
        "id": "ebb732e150de1319",
        "type": "tab",
        "label": "Insert raw data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bff1f3727cbb6489",
        "type": "tab",
        "label": "TH parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "47c687530406e599",
        "type": "tab",
        "label": "HVAC Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2e36b118dae2e5e9",
        "type": "tab",
        "label": "MiAC Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3b6e589a771e1dc9",
        "type": "tab",
        "label": "Water Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "aa04602ce2e06356",
        "type": "tab",
        "label": "Movement Parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1bbf2bd779b47eea",
        "type": "tab",
        "label": "Etot parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "862bc43147b5a8a2",
        "type": "tab",
        "label": "Wtot parsing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fe78548ad9d34539",
        "type": "mqtt-broker",
        "name": "mqtt",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "28bf60a032e41c72",
        "type": "MySQLdatabase",
        "name": "iot_home",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "iot_home",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "21211089e2bf6c2f",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "hvac readings",
        "topic": "/home/15min/hvac",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "4d1efe8504cb5c0f",
                "a8bd628b8a1745ab"
            ]
        ]
    },
    {
        "id": "32f1c92d8ae12e38",
        "type": "mysql",
        "z": "ebb732e150de1319",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "bd1a99380f47439c"
            ]
        ]
    },
    {
        "id": "a8bd628b8a1745ab",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO HVAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "bd1a99380f47439c",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 480,
        "wires": []
    },
    {
        "id": "4d1efe8504cb5c0f",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 40,
        "wires": []
    },
    {
        "id": "cc800c5d788aab63",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "th readings",
        "topic": "/home/15min/th",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "443ad78157a6a45d",
                "12fccbb2c5b247ab"
            ]
        ]
    },
    {
        "id": "12fccbb2c5b247ab",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO TH(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "443ad78157a6a45d",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 180,
        "wires": []
    },
    {
        "id": "10b399c6eab4f024",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "miac readings",
        "topic": "/home/15min/miac",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "4d91baac7dea9b77",
                "c5e8ecd8b66cdd16"
            ]
        ]
    },
    {
        "id": "c5e8ecd8b66cdd16",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\ncontext.set('last_miac', data.reading);\nmsg.topic = \"INSERT INTO MIAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 380,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "4d91baac7dea9b77",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 320,
        "wires": []
    },
    {
        "id": "f965a7242700d42b",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "etot readings",
        "topic": "/home/day/etot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 520,
        "wires": [
            [
                "43fed6fab1b7699b",
                "ca4dfd38fd91a473"
            ]
        ]
    },
    {
        "id": "ca4dfd38fd91a473",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO Etot(dtime, reading) VALUES (?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "43fed6fab1b7699b",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 460,
        "wires": []
    },
    {
        "id": "871c6d426eeaac93",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "move readings",
        "topic": "/home/sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 640,
        "wires": [
            [
                "5e75c7ca1436c029",
                "f4cb529b8f1ca058",
                "e5ac3e51e173a7cc"
            ]
        ]
    },
    {
        "id": "f4cb529b8f1ca058",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device];\nmsg.topic = \"INSERT INTO Movement(dtime, device) VALUES (?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 640,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "5e75c7ca1436c029",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "73d63fb76665047d",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "water readings",
        "topic": "/home/15min/water",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 760,
        "wires": [
            [
                "2711d8902e1a417b",
                "2512bcdc82f99e58"
            ]
        ]
    },
    {
        "id": "2512bcdc82f99e58",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nvar today = new Date();\nvar readingDate = new Date(data.dtime);\nvar dayDiff = Math.floor((today.getTime() - readingDate.getTime()) / 86400000)\nif (dayDiff == 0) {\n    msg.payload = [data.dtime, data.device, data.reading];\n    msg.topic = \"INSERT INTO Water(dtime, device, reading) VALUES (?, ?);\";\n}\nelse if (dayDiff == 10) {\n    msg.payload = [data.dtime_event, data.dtime_received, data.device, data.reading];\n    msg.topic = \"INSERT INTO RejectedEvents(dtime_event, dtime_received, device, reading) VALUES (?, ?);\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 760,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "2711d8902e1a417b",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 700,
        "wires": []
    },
    {
        "id": "054048d455f6bb47",
        "type": "mqtt in",
        "z": "ebb732e150de1319",
        "name": "watertot readings",
        "topic": "/home/day/watertot",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 900,
        "wires": [
            [
                "e6e9fddfa6f995d0",
                "bf181d36c52968e1"
            ]
        ]
    },
    {
        "id": "bf181d36c52968e1",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "insert query",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO watertot(device, reading) VALUES (?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 900,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "e6e9fddfa6f995d0",
        "type": "debug",
        "z": "ebb732e150de1319",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 840,
        "wires": []
    },
    {
        "id": "e5ac3e51e173a7cc",
        "type": "function",
        "z": "ebb732e150de1319",
        "name": "trigger_alarm",
        "func": "function is_night_time(dtime) {\n    const date = new Date(dtime);\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n    return (hour >= 2 && (hour <=5 || (hour == 6 && minutes == 0)));\n}\n\nif (context.get('last_miac') < 100) {\n    msg.payload.trigger = 'energy';\n}\nelse if (is_night_time()) {\n    msg.payload.trigger = 'time';\n}\nelse {\n    return null\n}\n\nconst data = msg.payload;\nmsg.payload = [data.dtime, data.trigger];\nmsg.topic = \"INSERT INTO Alarms(dtime, trigger) VALUES (?, ?);\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1080,
        "wires": [
            [
                "32f1c92d8ae12e38"
            ]
        ]
    },
    {
        "id": "625a5261625a38ae",
        "type": "mqtt in",
        "z": "bff1f3727cbb6489",
        "name": "TH*",
        "topic": "/home/15min/TH/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 70,
        "y": 220,
        "wires": [
            [
                "de2560e880d4b1cf"
            ]
        ]
    },
    {
        "id": "c83c99b65d9e2b9a",
        "type": "debug",
        "z": "bff1f3727cbb6489",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "de2560e880d4b1cf",
        "type": "function",
        "z": "bff1f3727cbb6489",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 220,
        "wires": [
            [
                "c83c99b65d9e2b9a",
                "9bdf7810112cbc32"
            ]
        ]
    },
    {
        "id": "10fb996dda708db2",
        "type": "function",
        "z": "bff1f3727cbb6489",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO TH(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 140,
        "wires": [
            [
                "907dfe7d9587e21f"
            ]
        ]
    },
    {
        "id": "907dfe7d9587e21f",
        "type": "mysql",
        "z": "bff1f3727cbb6489",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 850,
        "y": 120,
        "wires": [
            [
                "c5c1b394bb1fde94"
            ]
        ]
    },
    {
        "id": "c5c1b394bb1fde94",
        "type": "debug",
        "z": "bff1f3727cbb6489",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 60,
        "wires": []
    },
    {
        "id": "9bdf7810112cbc32",
        "type": "switch",
        "z": "bff1f3727cbb6489",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "10fb996dda708db2",
                "fe29eeda2cab1546"
            ],
            [
                "65b9f739de6fbfd6"
            ],
            [
                "3e8937fc1178d0fe"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "65b9f739de6fbfd6",
        "type": "debug",
        "z": "bff1f3727cbb6489",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 540,
        "wires": []
    },
    {
        "id": "3e8937fc1178d0fe",
        "type": "debug",
        "z": "bff1f3727cbb6489",
        "name": "too late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "fe29eeda2cab1546",
        "type": "function",
        "z": "bff1f3727cbb6489",
        "name": "aggregation",
        "func": "const data = msg.payload;\nconst curr_device = data.device;\nif (!context.th[curr_device]) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.th[curr_device] = {\n        \"dtime\": date,\n        \"freq\": 0.0,\n        \"sum\": 0.0  \n    };\n}\n\nif (context.th[curr_device].dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.th[curr_device].dtime, curr_device, context.th[curr_device].sum / context.th[curr_device].freq];\n    msg.topic = \"INSERT INTO THAvgDay(dtime, device, day_avg) VALUES(?, ?, ?);\";\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.th[curr_device].dtime = date;\n    context.th[curr_device].freq = 1.0;\n    context.th[curr_device].sum = data.reading;\n    return msg;\n}\n\ncontext.th[curr_device].freq += 1.0;\ncontext.th[curr_device].sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.th = {};",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 320,
        "wires": [
            [
                "907dfe7d9587e21f"
            ]
        ]
    },
    {
        "id": "b8a1d2e553f5e50c",
        "type": "mqtt in",
        "z": "47c687530406e599",
        "name": "HVAC*",
        "topic": "/home/15min/HVAC/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 240,
        "wires": [
            [
                "adeffaee7c1b0b96"
            ]
        ]
    },
    {
        "id": "a9eef25e68252466",
        "type": "debug",
        "z": "47c687530406e599",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 140,
        "wires": []
    },
    {
        "id": "adeffaee7c1b0b96",
        "type": "function",
        "z": "47c687530406e599",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseInt(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 240,
        "wires": [
            [
                "a9eef25e68252466",
                "db7df5d509edaa33"
            ]
        ]
    },
    {
        "id": "5f99d6d91db5fb56",
        "type": "function",
        "z": "47c687530406e599",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO HVAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "7ae41774c60ba770"
            ]
        ]
    },
    {
        "id": "7ae41774c60ba770",
        "type": "mysql",
        "z": "47c687530406e599",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "dc3d651e8b9ef0af"
            ]
        ]
    },
    {
        "id": "dc3d651e8b9ef0af",
        "type": "debug",
        "z": "47c687530406e599",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "db7df5d509edaa33",
        "type": "switch",
        "z": "47c687530406e599",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "5f99d6d91db5fb56",
                "00d2d84d358750ea"
            ],
            [
                "bef4bf1a8610f007"
            ],
            [
                "1f347f742ac64ee7"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "bef4bf1a8610f007",
        "type": "debug",
        "z": "47c687530406e599",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 560,
        "wires": []
    },
    {
        "id": "1f347f742ac64ee7",
        "type": "debug",
        "z": "47c687530406e599",
        "name": "too late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 620,
        "wires": []
    },
    {
        "id": "00d2d84d358750ea",
        "type": "function",
        "z": "47c687530406e599",
        "name": "aggregation",
        "func": "const data = msg.payload;\nconst curr_device = data.device;\n\nif (!context.hvac[curr_device]) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.hvac[curr_device] = {\n        \"dtime\": date,\n        \"sum\": 0\n    };\n}\n\nif (context.hvac[curr_device].dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.hvac[curr_device].dtime, curr_device, context.hvac[curr_device].sum];\n    msg.topic = \"INSERT INTO HVACSumDay(dtime, device, day_sum) VALUES(?, ?, ?);\";\n    global.set(\"last_hvac_sum\", global.get(\"last_hvac_sum\")+context.hvac[curr_device].sum);\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.hvac[curr_device].dtime = date;\n    context.hvac[curr_device].sum = data.reading;\n    return msg;\n}\ncontext.hvac[curr_device].sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.hvac = {};",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "7ae41774c60ba770"
            ]
        ]
    },
    {
        "id": "50dab1a8afb5d883",
        "type": "mqtt in",
        "z": "2e36b118dae2e5e9",
        "name": "MiAC*",
        "topic": "/home/15min/MiAC/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 280,
        "wires": [
            [
                "92b4c792d9eb6585"
            ]
        ]
    },
    {
        "id": "9624a5e64b78cbd2",
        "type": "debug",
        "z": "2e36b118dae2e5e9",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "92b4c792d9eb6585",
        "type": "function",
        "z": "2e36b118dae2e5e9",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseInt(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 280,
        "wires": [
            [
                "9624a5e64b78cbd2",
                "b1bd6efee1835727"
            ]
        ]
    },
    {
        "id": "79680c0f99c48e07",
        "type": "function",
        "z": "2e36b118dae2e5e9",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\ncontext.set('last_miac', data.reading);\nmsg.topic = \"INSERT INTO MiAC(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "95d18e1441c43ff3"
            ]
        ]
    },
    {
        "id": "95d18e1441c43ff3",
        "type": "mysql",
        "z": "2e36b118dae2e5e9",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 890,
        "y": 180,
        "wires": [
            [
                "93fe7f9a17ae5224"
            ]
        ]
    },
    {
        "id": "93fe7f9a17ae5224",
        "type": "debug",
        "z": "2e36b118dae2e5e9",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "b1bd6efee1835727",
        "type": "switch",
        "z": "2e36b118dae2e5e9",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "79680c0f99c48e07",
                "5e3f20c334119ca1"
            ],
            [
                "52c9b09fbe05f013"
            ],
            [
                "d4805bbe8976ecda"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "52c9b09fbe05f013",
        "type": "debug",
        "z": "2e36b118dae2e5e9",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 600,
        "wires": []
    },
    {
        "id": "d4805bbe8976ecda",
        "type": "debug",
        "z": "2e36b118dae2e5e9",
        "name": "too late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 660,
        "wires": []
    },
    {
        "id": "5e3f20c334119ca1",
        "type": "function",
        "z": "2e36b118dae2e5e9",
        "name": "aggregation",
        "func": "const data = msg.payload;\nconst curr_device = data.device;\nif (!context.miac[curr_device]) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.miac[curr_device] = {\n        \"dtime\": date,\n        \"sum\": 0\n    };\n}\n\nif (context.miac[curr_device].dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.miac[curr_device].dtime, curr_device, context.miac[curr_device].sum];\n    msg.topic = \"INSERT INTO MIACSumDay(dtime, device, day_sum) VALUES(?, ?, ?);\";\n    global.set(\"last_miac_sum\", global.get(\"last_miac_sum\") + context.miac[curr_device].sum);\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.miac[curr_device].dtime = date;\n    context.miac[curr_device].sum = data.reading;\n    return msg;\n}\n\ncontext.miac[curr_device].sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.miac = {};",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "95d18e1441c43ff3"
            ]
        ]
    },
    {
        "id": "a29d7bca1c267e56",
        "type": "mqtt in",
        "z": "3b6e589a771e1dc9",
        "name": "Water*",
        "topic": "/home/15min/W/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "5effcd25d657b324"
            ]
        ]
    },
    {
        "id": "4a77cfe8bf53869f",
        "type": "debug",
        "z": "3b6e589a771e1dc9",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "5effcd25d657b324",
        "type": "function",
        "z": "3b6e589a771e1dc9",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "4a77cfe8bf53869f",
                "0289d0a16de4cafe"
            ]
        ]
    },
    {
        "id": "a7abb036049aee2f",
        "type": "function",
        "z": "3b6e589a771e1dc9",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device, data.reading];\nmsg.topic = \"INSERT INTO Water(dtime, device, reading) VALUES ( ?, ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 160,
        "wires": [
            [
                "605b55b6e68230b7"
            ]
        ]
    },
    {
        "id": "605b55b6e68230b7",
        "type": "mysql",
        "z": "3b6e589a771e1dc9",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "0aacf7be1db83df3"
            ]
        ]
    },
    {
        "id": "0aacf7be1db83df3",
        "type": "debug",
        "z": "3b6e589a771e1dc9",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 80,
        "wires": []
    },
    {
        "id": "0289d0a16de4cafe",
        "type": "switch",
        "z": "3b6e589a771e1dc9",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "a7abb036049aee2f",
                "e98e0d59b7501dc3"
            ],
            [
                "717d02db82f5f36c"
            ],
            [
                "3dca439b99ea6d04"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "e98e0d59b7501dc3",
        "type": "function",
        "z": "3b6e589a771e1dc9",
        "name": "aggregation",
        "func": "const data = msg.payload;\nconst curr_device = data.device;\n\nif (!context.water[curr_device]) {\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.water[curr_device] = {\n        \"dtime\": date,\n        \"sum\": 0.0\n    };\n}\n\nif (context.water[curr_device].dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.water[curr_device].dtime, curr_device, context.water[curr_device].sum];\n    msg.topic = \"INSERT INTO WaterSumDay(dtime, device, day_sum) VALUES(?, ?, ?);\";\n    global.set(\"last_w_sum\", global.get(\"last_w_sum\") + context.water[curr_device].sum);\n    global.yesterdayWater[curr_device] = {...context.water[curr_device]};\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.water[curr_device].dtime = date;\n    context.water[curr_device].sum = data.reading;\n    return msg;\n}\n\ncontext.water[curr_device].sum += data.reading;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.water = {};\nif (!global.yesterdayWater) {\n    global.yesterdayWater = {};\n}",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 380,
        "wires": [
            [
                "605b55b6e68230b7"
            ]
        ]
    },
    {
        "id": "717d02db82f5f36c",
        "type": "function",
        "z": "3b6e589a771e1dc9",
        "name": "late aggregation",
        "func": "const data = msg.payload;\nconst curr_device = data.device;\nif (!global.yesterdayWater[curr_device]) {\n    const date = data.startOfYesterday;\n    global.yesterdayWater[curr_device] = {\n        \"dtime\": date,\n        \"sum\": 0.0\n    };\n}\n\nglobal.yesterdayWater[curr_device].sum += data.reading;\nmsg.payload = {};\nmsg.payload.dtime = data.dtime;\nmsg.payload.device = data.device;\nmsg.payload.reading = data.reading;\nmsg.payload.sum_dtime = global.yesterdayWater[curr_device].dtime;\nmsg.payload.sum = global.yesterdayWater[curr_device].sum;\nmsg.topic = \"INSERT INTO Water(dtime, device, reading) VALUES ( :dtime, :device, :reading); \" +\n\"INSERT INTO WaterSumDay(dtime, device, day_sum) VALUES(:sum_dtime, :device, :sum) ON DUPLICATE KEY UPDATE day_sum = :sum ;\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif (!global.yesterdayWater) {\n    global.yesterdayWater = {};\n}",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 480,
        "wires": [
            [
                "605b55b6e68230b7"
            ]
        ]
    },
    {
        "id": "3dca439b99ea6d04",
        "type": "function",
        "z": "3b6e589a771e1dc9",
        "name": "insert rejected",
        "func": "const data = msg.payload;\n\nmsg.payload = [data.dtime, data.startOfDay, data.device, data.reading];\nmsg.topic = \"INSERT INTO RejectedEvents(dtime_event, dtime_received, device, reading) VALUES (?, ?, ?, ?)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 762,
        "y": 629,
        "wires": [
            [
                "605b55b6e68230b7"
            ]
        ]
    },
    {
        "id": "bc2450fe06ec601f",
        "type": "mqtt in",
        "z": "aa04602ce2e06356",
        "name": "Movement*",
        "topic": "/home/movement/#",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "a606974513fef940"
            ]
        ]
    },
    {
        "id": "48dbc70c9e6582f5",
        "type": "debug",
        "z": "aa04602ce2e06356",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "a606974513fef940",
        "type": "function",
        "z": "aa04602ce2e06356",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst device = msg.topic.split(\"/\")[3];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "48dbc70c9e6582f5",
                "74f7eaadcd6a41b0"
            ]
        ]
    },
    {
        "id": "b3467ed8a86a0a8b",
        "type": "function",
        "z": "aa04602ce2e06356",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.device];\nmsg.topic = \"INSERT INTO Movement(dtime, device) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 160,
        "wires": [
            [
                "8420f560bedb7ea8"
            ]
        ]
    },
    {
        "id": "8420f560bedb7ea8",
        "type": "mysql",
        "z": "aa04602ce2e06356",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "5058c919bf6ebf04"
            ]
        ]
    },
    {
        "id": "5058c919bf6ebf04",
        "type": "debug",
        "z": "aa04602ce2e06356",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 80,
        "wires": []
    },
    {
        "id": "74f7eaadcd6a41b0",
        "type": "switch",
        "z": "aa04602ce2e06356",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 440,
        "wires": [
            [
                "b3467ed8a86a0a8b",
                "5ea54436bfe1ab5e",
                "0b4f9042900b7dd6"
            ],
            [
                "6f5c03f085d12c62"
            ],
            [
                "200461d0458a7959"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "6f5c03f085d12c62",
        "type": "debug",
        "z": "aa04602ce2e06356",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "200461d0458a7959",
        "type": "debug",
        "z": "aa04602ce2e06356",
        "name": "too late",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 620,
        "wires": []
    },
    {
        "id": "5ea54436bfe1ab5e",
        "type": "function",
        "z": "aa04602ce2e06356",
        "name": "trigger_alarm",
        "func": "const data = msg.payload;\n\nfunction is_night_time(dtime) {\n    const date = new Date(dtime);\n    const hour = date.getHours();\n    const minutes = date.getMinutes();\n    return (hour >= 2 && (hour <=5 || (hour == 6 && minutes == 0)));\n}\n\nif (global.get('last_miac') < 100) {\n    data.alarmTrigger = 'energy';\n}\nelse if (is_night_time(data.dtime)) {\n    data.alarmTrigger = 'time';\n}\nelse {\n    return null\n}\n\n\nmsg.payload = [data.dtime, data.alarmTrigger];\nmsg.topic = \"INSERT INTO Alarms(dtime, alarm_trigger) VALUES (?, ?);\";\n//\"trigger\" is a reserved word\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "8420f560bedb7ea8",
                "86237b2c06af7414"
            ]
        ]
    },
    {
        "id": "0b4f9042900b7dd6",
        "type": "function",
        "z": "aa04602ce2e06356",
        "name": "aggregation",
        "func": "const data = msg.payload;\nconst curr_device = data.device;\n\nif (!context.mv[curr_device]) {\n    const date = data.dtime;\n    date.setHours(0,0,0,0);\n    context.mv[curr_device] = {\n        \"dtime\": date,\n        \"sum\": 0\n    };\n}\n\nif (context.mv[curr_device].dtime.getDate() != data.dtime.getDate()) {\n    msg.payload = [context.mv[curr_device].dtime, curr_device, context.mv[curr_device].sum];\n    msg.topic = \"INSERT INTO MovementSumDay(dtime, device, day_count) VALUES(?, ?, ?);\";\n    const date = data.dtime;\n    date.setHours(0, 0, 0, 0);\n    context.mv[curr_device].dtime = date;\n    context.mv[curr_device].sum = 0;\n    return msg;\n}\n\ncontext.mv[curr_device].sum++;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.mv = {};",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 380,
        "wires": [
            [
                "8420f560bedb7ea8"
            ]
        ]
    },
    {
        "id": "86237b2c06af7414",
        "type": "debug",
        "z": "aa04602ce2e06356",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 360,
        "wires": []
    },
    {
        "id": "af7fb6bdab0c4f4d",
        "type": "mqtt in",
        "z": "1bbf2bd779b47eea",
        "name": "Etot",
        "topic": "/home/day/Etot",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 240,
        "wires": [
            [
                "f9630be159231132"
            ]
        ]
    },
    {
        "id": "3968dc0cc9b17ebf",
        "type": "debug",
        "z": "1bbf2bd779b47eea",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "f9630be159231132",
        "type": "function",
        "z": "1bbf2bd779b47eea",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "3968dc0cc9b17ebf",
                "74ddf968d7ab75f1"
            ]
        ]
    },
    {
        "id": "b4ca23ccca603ac3",
        "type": "function",
        "z": "1bbf2bd779b47eea",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO Etot(dtime, reading) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 160,
        "wires": [
            [
                "476eaed8181684a0"
            ]
        ]
    },
    {
        "id": "476eaed8181684a0",
        "type": "mysql",
        "z": "1bbf2bd779b47eea",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "a0c67acf2a51326a"
            ]
        ]
    },
    {
        "id": "a0c67acf2a51326a",
        "type": "debug",
        "z": "1bbf2bd779b47eea",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 80,
        "wires": []
    },
    {
        "id": "74ddf968d7ab75f1",
        "type": "switch",
        "z": "1bbf2bd779b47eea",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "b4ca23ccca603ac3",
                "e31735dc7f27a2df"
            ],
            [
                "c6e50e4f3d788441"
            ],
            [
                "334ec5a51e2cdfa5"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "c6e50e4f3d788441",
        "type": "debug",
        "z": "1bbf2bd779b47eea",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 560,
        "wires": []
    },
    {
        "id": "334ec5a51e2cdfa5",
        "type": "debug",
        "z": "1bbf2bd779b47eea",
        "name": "too late",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 620,
        "wires": []
    },
    {
        "id": "e31735dc7f27a2df",
        "type": "function",
        "z": "1bbf2bd779b47eea",
        "name": "calculate Etot day diff",
        "func": "if (!flow.get(\"previousEtot\")){\n    flow.set(\"previousEtot\", msg.payload.reading);\n    msg.payload.day_diff = msg.payload.reading;\n}else{\n    var diff = msg.payload.reading - flow.get(\"previousEtot\");\n    msg.payload.day_diff = diff;\n    flow.set(\"previousEtot\", msg.payload.reading);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"previousEtot\", 0)",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 420,
        "wires": [
            [
                "52b5d72f024b6e2c",
                "2c23b279d09a732a"
            ]
        ]
    },
    {
        "id": "52b5d72f024b6e2c",
        "type": "function",
        "z": "1bbf2bd779b47eea",
        "name": "insert daydiff data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.day_diff];\nmsg.topic = \"INSERT INTO EtotDayDiff(dtime, day_diff) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 480,
        "wires": [
            [
                "9d51199dcca2eef2",
                "eb044e222dcbd8f2"
            ]
        ]
    },
    {
        "id": "9d51199dcca2eef2",
        "type": "mysql",
        "z": "1bbf2bd779b47eea",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 1390,
        "y": 380,
        "wires": [
            [
                "eb044e222dcbd8f2"
            ]
        ]
    },
    {
        "id": "eb044e222dcbd8f2",
        "type": "debug",
        "z": "1bbf2bd779b47eea",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 440,
        "wires": []
    },
    {
        "id": "7079435b87468b11",
        "type": "function",
        "z": "1bbf2bd779b47eea",
        "name": "insert leak data",
        "func": "const data = msg.payload;\nvar day_diff = msg.payload.day_diff;\nconst rest = day_diff - global.get(\"last_hvac_sum\") - global.get(\"last_miac_sum\");\nmsg.payload = [data.dtime,rest];\nmsg.topic =  \"INSERT INTO ElecDayRest(dtime, leak_amount) VALUES ( ?, ?);\";\nglobal.set(\"last_hvac_sum\", 0);\nglobal.set(\"last_miac_sum\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"last_hvac_sum\",0);\nglobal.set(\"last_miac_sum\",0);",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 580,
        "wires": [
            [
                "9d51199dcca2eef2",
                "eb044e222dcbd8f2"
            ]
        ]
    },
    {
        "id": "2c23b279d09a732a",
        "type": "delay",
        "z": "1bbf2bd779b47eea",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 620,
        "wires": [
            [
                "7079435b87468b11"
            ]
        ]
    },
    {
        "id": "98330c8ca1968cca",
        "type": "mqtt in",
        "z": "862bc43147b5a8a2",
        "name": "Wtot",
        "topic": "/home/day/Wtot",
        "qos": "2",
        "datatype": "utf8",
        "broker": "fe78548ad9d34539",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "b54abf49f6219313"
            ]
        ]
    },
    {
        "id": "8dde923a6aa452e2",
        "type": "debug",
        "z": "862bc43147b5a8a2",
        "name": "parsed payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 200,
        "wires": []
    },
    {
        "id": "b54abf49f6219313",
        "type": "function",
        "z": "862bc43147b5a8a2",
        "name": "parse data",
        "func": "const items = msg.payload.split(\"|\");\nconst date = new Date(items[0]);\nconst value = parseFloat(items[1]);\nconst device = msg.topic.split(\"/\")[4];\nconst startOfDay = new Date();\nstartOfDay.setHours(0, 0, 0, 0);\nconst startOfYesterday = new Date();\nstartOfYesterday.setDate(startOfYesterday.getDate()-1)\nstartOfYesterday.setHours(0, 0, 0, 0);\nmsg.payload={\"dtime\":date,\n    \"device\":device,\n    \"reading\":value,\n    \"startOfDay\":startOfDay,\n    \"startOfYesterday\":startOfYesterday}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 300,
        "wires": [
            [
                "8dde923a6aa452e2",
                "657102efe6f0aff5"
            ]
        ]
    },
    {
        "id": "2239717fb3561b8a",
        "type": "function",
        "z": "862bc43147b5a8a2",
        "name": "insert raw data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.reading];\nmsg.topic = \"INSERT INTO Wtot(dtime, reading) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 220,
        "wires": [
            [
                "93577b049802a20a"
            ]
        ]
    },
    {
        "id": "93577b049802a20a",
        "type": "mysql",
        "z": "862bc43147b5a8a2",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "b1ec4a9c674ca48c"
            ]
        ]
    },
    {
        "id": "b1ec4a9c674ca48c",
        "type": "debug",
        "z": "862bc43147b5a8a2",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 140,
        "wires": []
    },
    {
        "id": "657102efe6f0aff5",
        "type": "switch",
        "z": "862bc43147b5a8a2",
        "name": "check if late",
        "property": "payload.dtime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "payload.startOfDay",
                "vt": "msg"
            },
            {
                "t": "gte",
                "v": "payload.startOfYesterday",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 590,
        "y": 500,
        "wires": [
            [
                "2239717fb3561b8a",
                "9f2cf8c9012f541c"
            ],
            [
                "b1f44d17dff9c887"
            ],
            [
                "7397d56a21462c18"
            ]
        ],
        "outputLabels": [
            "not late",
            "late agg",
            "too late"
        ]
    },
    {
        "id": "b1f44d17dff9c887",
        "type": "debug",
        "z": "862bc43147b5a8a2",
        "name": "late agg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 620,
        "wires": []
    },
    {
        "id": "7397d56a21462c18",
        "type": "debug",
        "z": "862bc43147b5a8a2",
        "name": "too late",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 680,
        "wires": []
    },
    {
        "id": "30e599c8ecc14981",
        "type": "debug",
        "z": "862bc43147b5a8a2",
        "name": "todo: aggregate",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 360,
        "wires": []
    },
    {
        "id": "9f2cf8c9012f541c",
        "type": "function",
        "z": "862bc43147b5a8a2",
        "name": "calculate Wtot day diff",
        "func": "if (!flow.get(\"previousWtot\")){\n    flow.set(\"previousWtot\", msg.payload.reading);\n    msg.payload.day_diff = msg.payload.reading;\n}else{\n    var diff=msg.payload.reading-flow.get(\"previousWtot\");\n    msg.payload.day_diff = diff;\n    flow.set(\"previousWtot\", msg.payload.reading);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"previousWtot\",0)",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 480,
        "wires": [
            [
                "967a3e9ef10c8d3d",
                "7cb81327fcf69994"
            ]
        ]
    },
    {
        "id": "967a3e9ef10c8d3d",
        "type": "function",
        "z": "862bc43147b5a8a2",
        "name": "insert daydiff data",
        "func": "const data = msg.payload;\nmsg.payload = [data.dtime, data.day_diff];\nmsg.topic = \"INSERT INTO WtotDayDiff(dtime, day_diff) VALUES ( ?, ?);\" ;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 520,
        "wires": [
            [
                "eaa57acdeefa63d6",
                "30e599c8ecc14981"
            ]
        ]
    },
    {
        "id": "eaa57acdeefa63d6",
        "type": "mysql",
        "z": "862bc43147b5a8a2",
        "mydb": "28bf60a032e41c72",
        "name": "db",
        "x": 1370,
        "y": 460,
        "wires": [
            [
                "77e641c3c1a0bcf9"
            ]
        ]
    },
    {
        "id": "77e641c3c1a0bcf9",
        "type": "debug",
        "z": "862bc43147b5a8a2",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 400,
        "wires": []
    },
    {
        "id": "7cb81327fcf69994",
        "type": "delay",
        "z": "862bc43147b5a8a2",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 640,
        "wires": [
            [
                "f714ac66e3ac4b6f"
            ]
        ]
    },
    {
        "id": "f714ac66e3ac4b6f",
        "type": "function",
        "z": "862bc43147b5a8a2",
        "name": "insert leak data",
        "func": "const data = msg.payload;\nvar day_diff = msg.payload.day_diff;\nconst rest = day_diff - global.get(\"last_w_sum\");\nmsg.payload = [data.dtime,rest];\nmsg.topic =  \"INSERT INTO WaterDayRest(dtime, leak_amount) VALUES ( ?, ?);\";\nglobal.set(\"last_w_sum\", 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"last_w_sum\", 0);",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 600,
        "wires": [
            [
                "eaa57acdeefa63d6"
            ]
        ]
    }
]